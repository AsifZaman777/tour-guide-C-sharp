<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>