<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAACEAAAAfAAAAHwAA
        AB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAA
        ABYAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQAAABwAAAAzAAAAmAAA
        AOEAAADiAAAA4gAAAOIAAADiAAAA4gAAAOIAAADiAAAA4gAAAOIAAADiAAAA4gAAAOIAAADiAAAA4gAA
        AOIAAADiAAAAygAAAFIAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABoAAACcAAAA3AAA
        AJgAAAA+AAAAzwAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAyQAAABYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaAAA
        APwAAAD/AAAA+wAAAGcAAACLAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADiAAAAHwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACAAAAA/wAAAP8AAAD/AAAAewAAAGwAAADlAAAA4QAAAOEAAADhAAAA4QAAAOEAAADhAAAA4QAA
        AOEAAADhAAAA4QAAAOEAAADhAAAA4gAAAOMAAADjAAAA5QAAAMkAAAAcAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAIAAAAD/AAAA/wAAAP8AAACNAAAAJgAAADkAAAA4AAAAOAAAADgAAAA4AAAAOAAA
        ADgAAAA4AAAAOAAAADgAAAA4AAAAOAAAADkAAAAqAAAAGwAAABwAAAAcAAAAGQAAAAMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAP8AAAD/AAAA/wAAAPEAAADhAAAA4QAAANsAAADdAAAA4gAA
        AOEAAADhAAAA4QAAAOEAAADhAAAA4QAAAOEAAADhAAAA5QAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAArgAA
        AIgAAAD0AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAfwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAADfAAAAXAAAAIAAAAD0AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAB/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAADhAAAAXAAAAIAAAAD0AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AH8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADhAAAAXQAAAF8AAAB/AAAAewAAAIIAAADWAAAA/wAA
        AP8AAAD/AAAAfwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AIAAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAMcAAAC/AAAATwAAAB0AAABxAAAAXQAA
        AEoAAADTAAAA/wAAAP8AAAB/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAgAAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAfwAAAIgAAADlAAAAXwAA
        AIUAAADtAAAAfwAAAEgAAADSAAAA/wAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAACAAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAB7AAAAewAA
        AP8AAADhAAAAXAAAAIEAAADsAAAAfwAAAEgAAADXAAAAgQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AHsAAAB7AAAA/wAAAP8AAADhAAAAWwAAAIEAAADsAAAAfwAAAE0AAABVAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAAgwAAAF0AAAD1AAAA/wAAAP8AAADgAAAAWgAAAIEAAADsAAAAgQAAABEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAADXAAAASwAAAH0AAAD0AAAA/wAAAP8AAADgAAAAWwAAAIEAAADsAAAAfgAA
        AAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADXAAAASgAAAH0AAAD0AAAA/wAAAP8AAADgAAAAWwAA
        AIEAAADqAAAAaQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAA
        APUAAACKAAAAfwAAAIAAAAB8AAAAewAAAHwAAACAAAAAfwAAAIwAAADFAAAASgAAAH0AAAD0AAAA/wAA
        AP8AAADgAAAAWwAAAIIAAADWAAAANgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAEAHwABAB8AEQAfABmAAAAfgAAAH8AAAD8=
</value>
  </data>
</root>