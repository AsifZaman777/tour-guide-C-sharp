<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>